#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at https://github.com/Orange-OpenSource/towards5gs-helm/blob/main/LICENSE
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI, Ian Chen
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
# Default values for free5gcControlPlane chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

global:
  projectName: free5gc
  userPlaneArchitecture: single  # possible values are "single" and "ulcl"
  nrf:
    service:
      name: nrf-nnrf
      type: ClusterIP
      port: "8000"
      nodePort: "30800"
  sbi:
    scheme: http
  smf:
    n4if:
      ipAddress: 10.100.50.244
  n4network:
    enabled: true
    name: n4network
    type: ipvlan
    masterIf: eth0
    subnetIP: 10.100.50.240
    cidr: 29
    gatewayIP: 10.100.50.246
    excludeIP: 10.100.50.246

initcontainers:
  curl:
    registry: towards5gs
    image: initcurl
    tag: "1.0.0"
  busybox:
    image: busybox
    tag: "1.32.0"

isPfcpNeeded: true

smf:
  name: smf
  replicaCount: 1
  image:
    name: towards5gs/free5gc-smf
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
  volume:
    mount: /free5gc/config/
  podAnnotations: {}
    # additional annotations
  imagePullSecrets: []
  podSecurityContext: {}
  securityContext: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  readinessProbe:
    initialDelaySeconds: 0
    periodSeconds: 1
    timeoutSeconds: 1
    failureThreshold:  40
    successThreshold: 1
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  configuration:
    serviceNameList: |-
        - nsmf-pdusession
        - nsmf-event-exposure
        - nsmf-oam
    ueRoutingInfo: |-
      UE1: # Group Name
        members:
        - imsi-208930000000003 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.100.100.26/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]

      UE2: # Group Name
        members:
        - imsi-208930000000004 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.100.100.16/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]

    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false