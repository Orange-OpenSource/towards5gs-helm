#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at https://github.com/Orange-OpenSource/towards5gs-helm/blob/main/LICENSE
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
{{- with .Values.amf }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "free5gc-amf.fullname" $ }}-{{ .name }}
  labels:
    {{- include "free5gc-amf.labels" $ | nindent 4 }}
    project: {{ $.Values.global.projectName }}
    nf: {{ .name }}
spec:
  {{- if not .autoscaling.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "free5gc-amf.selectorLabels" $ | nindent 6 }}
      project: {{ $.Values.global.projectName }}
      nf: {{ .name }}
  template:
    metadata:
      annotations:
        {{- include "free5gc-amf.amfAnnotations" $ | nindent 8 }}
{{- if not $.Values.global.amf.service.ngap.enabled }}        
        k8s.v1.cni.cncf.io/networks: '[
            { "name": "{{ $.Values.global.n2network.name }}-{{ .name }}",
              "interface": "n2",
              "ips": [ "{{ $.Values.global.amf.n2if.ipAddress }}/{{ $.Values.global.n2network.cidr }}" ],
              "gateway": [ "{{ $.Values.global.n2network.gatewayIP }}" ]
            }]'
{{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/amf-configmap.yaml") $ | sha256sum }}
      labels:
        {{- include "free5gc-amf.selectorLabels" $ | nindent 8 }}
        project: {{ $.Values.global.projectName }}
        nf: {{ .name }}
    spec:
      imagePullSecrets:
        {{- toYaml .imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-nrf
        {{- with $.Values.initcontainers.curl }}
        image: {{ .registry }}/{{ .image }}:{{ .tag }}
        {{- end }}
        env:
        - name: DEPENDENCIES
          value: {{ $.Values.global.sbi.scheme }}://{{ $.Values.global.nrf.service.name }}:{{ $.Values.global.nrf.service.port }}
        command: ['sh', '-c', 'set -x; for dependency in $DEPENDENCIES; do while [ $(curl --connect-timeout 1 -s -o /dev/null -w "%{http_code}" $dependency) -ne 200 ]; do echo waiting for dependencies; sleep 1; done; done;']   
      
      containers:
      - name: {{ .name }}
        image: {{ .image.name }}:{{ .image.tag | default $.Chart.AppVersion }}
        imagePullPolicy: {{ .image.pullPolicy }}
        securityContext:
            {{- toYaml .securityContext | nindent 12 }}
        ports:
        - containerPort: {{ .service.port }}
        ports:
        - name: namf
          containerPort: {{ .service.port }}
        - name: n2
          containerPort: {{ $.Values.global.amf.service.ngap.port }}
          protocol: {{ $.Values.global.amf.service.ngap.protocol }}
        command: ["./amf"]
        args: ["-amfcfg", "../config/amfcfg.yaml"]
        env:
          - name: GIN_MODE
            value: release
        volumeMounts:
        - mountPath: {{ .volume.mount }}
          name: {{ .volume.name }}
        resources:
            {{- toYaml .resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        {{- toYaml .nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      tolerations:
        {{- toYaml .tolerations | nindent 8 }}

      volumes:
      - name: {{ .volume.name }}
        projected:
          sources:
          - configMap:
              name: {{ .configmap.name }}
{{- end }}